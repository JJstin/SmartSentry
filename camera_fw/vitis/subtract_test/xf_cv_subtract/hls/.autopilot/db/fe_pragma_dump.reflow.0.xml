<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<34>::ap_int<34, true>(ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi33ELb0EEC2EDq33_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator!=<6, false>(ap_int_base<6, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<32, false>::logic operator|<32, false, 32, false>(ap_int_base<32, false> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi33ELb1EEC2EDq33_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<6, false>::ap_int_base<33, true>(ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator<<6, false>(ap_int_base<6, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi6ELb0EEC2EDq6_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator<<16, false>(ap_int_base<16, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator==<16, false>(ap_int_base<16, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<32, false>::ssdm_int(unsigned int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base<6, false>(ap_int_base<6, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::RType<6, false>::minus operator-<32, true, 6, false>(ap_int_base<32, true> const&, ap_int_base<6, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32> ap_int_base<32, false>::operator<<<33>(ap_int_base<33, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<6>::ap_uint<33>(ap_int<33> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<16, false>::operator<<16, false>(ap_int_base<16, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi34ELb1EEC2EDq34_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<24>(ap_uint<24> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32> ap_int_base<32, false>::operator<<<6>(ap_int_base<6, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<6, false>::RType<($_0)32, true>::minus operator-<6, false>(int, ap_int_base<6, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32> ap_int_base<32, false>::operator>><33>(ap_int_base<33, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<6, false>::RType<($_0)32, true>::plus operator+<6, false>(ap_int_base<6, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<6, false>::operator!=<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, false>::ap_int_base<33, true>(ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<16>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::operator-() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::RType<33, true>::minus operator-<1, false, 33, true>(ap_int_base<1, false> const&, ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32> ap_int_base<32, false>::operator>><33>(ap_int_base<33, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="to_uint" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<6>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base<33, true>(ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<32, true>::mult operator*<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<6, false>::RType<32, true>::plus operator+<6, false, 32, true>(ap_int_base<6, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<13>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<6, false>::operator<<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::RType<32, true>::plus operator+<64, true, 32, true>(ap_int_base<64, true> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="252" pragmaType="inline" parentfunction="xf::cv::Scalar<3, unsigned char>::Scalar(unsigned char)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="253" pragmaType="array_partition" parentfunction="xf::cv::Scalar<3, unsigned char>::Scalar(unsigned char)" dim="1" factor="0" mode="complete" dynamic="0" variable="val"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<22, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::RType<($_0)32, true>::plus operator+<64, true>(ap_int_base<64, true> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<16, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::RType<65, true>::arg1 operator>><65, true>(ap_int_base<65, true> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<6, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<16, false>::operator<<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="to_uint" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<16, false>::ssdm_int(unsigned short)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<($_0)32, true>::mult operator*<32, false>(ap_int_base<32, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<24, false>(ap_int_base<24, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi65ELb1EEC2EDq65_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator<<13, false>(ap_int_base<13, false> const&, unsigned short)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, false>::RType<($_0)16, false>::mult operator*<13, false>(ap_int_base<13, false> const&, unsigned short)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<64, true>::ssdm_int(long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<29, false>::RType<13, false>::plus operator+<29, false, 13, false>(ap_int_base<29, false> const&, ap_int_base<13, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<30, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<16, false>::operator==<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi22ELb0EEC2EDq22_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<24>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator<<13, false>(ap_int_base<13, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, false>::RType<($_0)32, true>::plus operator+<13, false>(ap_int_base<13, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi24ELb0EEC2EDq24_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<24, false>::ap_range_ref(ap_int_base<24, false>*, int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator<<25, true>(ap_int_base<25, true> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<30, false>::ap_int_base<29, false>(ap_int_base<29, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<25>::ap_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<24>::ap_uint<25>(ap_int<25> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<25, true>::operator<<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<25, true>::ap_int_base<24, false>(ap_int_base<24, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<30, false>::ap_int_base<13, false>(ap_int_base<13, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<25, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<30, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi30ELb0EEC2EDq30_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<24, false>::ap_int_base<25, true>(ap_int_base<25, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<16, false>::ap_int_base(unsigned short)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="to_int" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<13, false>::operator<<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, false>::RType<16, false>::mult operator*<13, false, 16, false>(ap_int_base<13, false> const&, ap_int_base<16, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<29, false>::ap_int_base<13, false>(ap_int_base<13, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<29, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi29ELb0EEC2EDq29_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<29, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<13, false>::operator<<16, false>(ap_int_base<16, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<29>::ap_uint<29, false>(ap_int_base<29, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<30>::ap_uint<30, false>(ap_int_base<30, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<24>::ap_uint<24, false>(ap_range_ref<24, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<25>::ap_int<25, true>(ap_int_base<25, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<13>::ap_uint<13, false>(ap_int_base<13, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi25ELb1EEC2EDq25_i" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\core/xf_arithm.hpp" line="69" pragmaType="inline" parentfunction="apply" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="to_int" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, false>::RType<32, true>::plus operator+<13, false, 32, true>(ap_int_base<13, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<24, false>::ap_int_base<24, false>(ap_range_ref<24, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<24, false>::RType<24, false>::minus operator-<24, false, 24, false>(ap_int_base<24, false> const&, ap_int_base<24, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base<13, false>(ap_int_base<13, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<55, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi13ELb0EEC2EDq13_j" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1019" pragmaType="loop_tripcount" parentfunction="Axi2AxiStream" min="1" max="1920" avg="960"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1024" pragmaType="pipeline" parentfunction="Axi2AxiStream" off="0" ii="1" rewind="0" style=""/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1023" pragmaType="loop_tripcount" parentfunction="Axi2AxiStream" min="1" max="810" avg="405"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::RType<22, false>::mult operator*<32, true, 22, false>(ap_int_base<32, true> const&, ap_int_base<22, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<54, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<32, false>(ap_range_ref<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<55, true>::ap_int_base<22, false>(ap_int_base<22, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<55>::ap_int<55, true>(ap_int_base<55, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<ap_uint<24>, 2>::stream()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="stream" parentfunction="hls::stream<ap_uint<24>, 2>::stream()" depth="2" type="fifo" variable="this"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<55, true>::ap_int_base<54, true>(ap_int_base<54, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1141" pragmaType="dataflow" parentfunction="Axi2Mat" disable_start_propagation="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<22, false>::RType<54, true>::plus operator+<22, false, 54, true>(ap_int_base<22, false> const&, ap_int_base<54, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<54, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<24, false>::ap_int_base<32, false>(ap_range_ref<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<24, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<24, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<32, false>::ap_range_ref(ap_int_base<32, false>*, int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<54>::ap_int<54, true>(ap_int_base<54, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="607" pragmaType="inline" parentfunction="init" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<55, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi54ELb1EEC2EDq54_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<54, true>::ap_int_base<22, false>(ap_int_base<22, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<24>::ap_uint<32, false>(ap_range_ref<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<22, false>::RType<($_0)32, true>::mult operator*<22, false>(int, ap_int_base<22, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi55ELb1EEC2EDq55_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<22>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1411" pragmaType="dataflow" parentfunction="Mat2Axi" disable_start_propagation="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1382" pragmaType="pipeline" parentfunction="AxiStream2Axi" off="0" ii="-1" rewind="0" style=""/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1381" pragmaType="loop_tripcount" parentfunction="AxiStream2Axi" min="1" max="1555200" avg="777600"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<22, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="xf_cv_subtract.cpp" line="37" pragmaType="dataflow" parentfunction="xf_cv_subtract" disable_start_propagation="0"/>
<pragma file="xf_cv_subtract.cpp" line="26" pragmaType="interface" parentfunction="xf_cv_subtract" mode="m_axi" port="img_in1" bundle="gmem0" offset="slave" name="" depth="1555200" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="xf_cv_subtract.cpp" line="27" pragmaType="interface" parentfunction="xf_cv_subtract" mode="m_axi" port="img_in2" bundle="gmem1" offset="slave" name="" depth="1555200" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="xf_cv_subtract.cpp" line="28" pragmaType="interface" parentfunction="xf_cv_subtract" mode="m_axi" port="img_out" bundle="gmem2" offset="slave" name="" depth="1555200" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="xf_cv_subtract.cpp" line="29" pragmaType="interface" parentfunction="xf_cv_subtract" mode="s_axilite" port="" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<22>::ap_uint<22, false>(ap_int_base<22, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1ELb0EEC2EDq1_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<22, false>::operator<<22, false>(ap_int_base<22, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\core/xf_arithm.hpp" line="1002" pragmaType="inline" parentfunction="subtract" off="1" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="949" pragmaType="bind_op" parentfunction="addrbound" op="12" impl="3" latency="2"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1303" pragmaType="loop_tripcount" parentfunction="MatStream2AxiStream" min="1" max="1920" avg="960"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1309" pragmaType="pipeline" parentfunction="MatStream2AxiStream" off="0" ii="-1" rewind="0" style=""/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1308" pragmaType="loop_tripcount" parentfunction="MatStream2AxiStream" min="1" max="1080" avg="540"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="672" pragmaType="inline" parentfunction="xf::cv::Mat<16, 1920, 1080, 1, 2>::Mat(int, int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1351" pragmaType="dataflow" parentfunction="Mat2AxiStream" disable_start_propagation="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<ap_uint<24>, 0>::stream()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<24, false>& ap_range_ref<24, false>::operator=<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<16, false>::operator++(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\core/xf_arithm.hpp" line="823" pragmaType="loop_flatten" parentfunction="xFarithm_proc" off="1"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\core/xf_arithm.hpp" line="822" pragmaType="loop_tripcount" parentfunction="xFarithm_proc" min="1920" max="1920" avg="1920"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\core/xf_arithm.hpp" line="830" pragmaType="pipeline" parentfunction="xFarithm_proc" off="0" ii="-1" rewind="0" style=""/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\core/xf_arithm.hpp" line="829" pragmaType="loop_tripcount" parentfunction="xFarithm_proc" min="1080" max="1080" avg="1080"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\core/xf_arithm.hpp" line="840" pragmaType="unroll" parentfunction="xFarithm_proc" factor="-1" skip_exit_check="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<22, false>::operator++(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<ap_uint<32>, 0>::stream()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<22, false>& ap_int_base<22, false>::operator+=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<16, false>& ap_int_base<16, false>::operator+=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, false>& ap_int_base<33, false>::operator=<34, true>(ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<24, false>& ap_range_ref<24, false>::operator=<24, false>(ap_int_base<24, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, false>& operator+=<13, false>(ap_int_base<13, false>&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, false>::operator++(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, false>& ap_int_base<13, false>::operator+=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, false>& ap_int_base<13, false>::operator+=<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<24, false>& ap_range_ref<24, false>::operator=<32, false>(ap_range_ref<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="0" pragmaType="dataflow" parentfunction="AxiStream2Mat" disable_start_propagation="0"/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1057" pragmaType="pipeline" parentfunction="AxiStream2MatStream" off="0" ii="-1" rewind="0" style=""/>
<pragma file="D:/Xilinx/Vitis_Libraries/vision/L1/include\common/xf_structs.hpp" line="1056" pragmaType="loop_tripcount" parentfunction="AxiStream2MatStream" min="1" max="2073600" avg="1036800"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
</pragmas>
